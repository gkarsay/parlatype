Notes to myself about various maintainer tasks

Translations
============

There are 3 translation templates (lib, app, help).
Update templates:

cd build
ninja libparlatype7-pot        # Update after soname change
ninja parlatype-pot
ninja help-xyz.parlatype.Parlatype-pot

Workflow for translations:
1) Update pot files locally
2) Commit and push changes
3) Weblate will update and push po files
   (after soname change update repository settings in Weblate for libparlatype)
4) Translate in Weblate, commit and push

Who worked on translations?
maint/print-translation-status


Typography
==========

Left double quotation mark: U+201C
Right double quotation mark: U+201D
Apostrophe = Right single quotation mark: U+2019
Horizontal ellipsis: U+2026 (Alt Gr + .)


Help
====

Mallard cheat seat:
https://blogs.gnome.org/shaunm/files/2012/01/mallardcheatsheet.png


Testing
=======

- Run test suite:
  ninja test
- Build with Clang:
  CC=clang meson build-clang
  cd build-clang
  ninja
- Static Clang analyzer:
  ninja scan-build
  or: SCANBUILD=<your exe> ninja scan-build (for Debian unstable: scan-build-7)
- Coverage report:
  meson <other flags> -Db_coverage=true
  ninja; ninja test; ninja coverage-html
- Valgrind:
  meson test --wrap='valgrind --tool=memcheck --leak-check=full --leak-resolution=high --num-callers=20 --suppressions=../libparlatype/tests/glib.supp --suppressions=../libparlatype/tests/gst.supp' --timeout-multiplier=10 player


Debug
=====

https://gstreamer.freedesktop.org/documentation/tutorials/basic/debugging-tools.html?gi-language=c
For example debugging a single GStreamer element (debug = 5, log = 6)
GST_DEBUG=ptaudioasrbin:5 parlatype

G_MESSAGES_DEBUG=parlatype parlatype

Debugging test suite:
meson test --gdb testname


Release
=======

Update help screenshots:
ninja generate-screenshots

Update data/screenshot.png, if necessary,
  width >= 620px, 16:9 ratio if possible
  see https://www.freedesktop.org/software/appstream/docs/chap-Quickstart.html

Update copyright year in about box in src/pt-app.c

Release commit:
- Update version in meson.build
- Update README.md dependencies (and package names) if necessary
- Update library so version in libparlatype/meson.build
- Update NEWS (release notes)
- Update data/parlatype.metainfo.xml.in (short release notes)
- Commit message "v1.x.x", next line "New major/minor/bugfix release"
- Tag commit "v1.x.x"

Test distribution:
# this will fail with PermissionError: https://github.com/mesonbuild/meson/issues/7034
ninja dist

Create tarball and sign it:
maint/make-release

Create release page on GitHub:
- Write/copy release notes
- Upload tarball and signature

GitHub Issues:
- Closed issues: Replace "Fix committed" labels with "Fix released"
- Close release milestone

Homepage:
- Publish release notes in News, can be more verbose

Packaging:
- Flathub packaging
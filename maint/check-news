#!/bin/bash

# Check NEWS and appdata for release

cd "$(dirname "$0")" || exit 1
cd ..

VERSION=$(grep --max-count 1 'version' meson.build | cut --delimiter=\' -f 2)
DATE=$(date --iso-8601)

if [ "$1" != "" ]; then
  COMMIT_MESSAGE="$1"
  if [ "${COMMIT_MESSAGE:1}" != "$VERSION" ]; then
    echo
    echo "Commit message version unlike meson project version!"
    echo "Commit message version: ${COMMIT_MESSAGE:1}"
    echo "Meson project version: $VERSION"
    exit 1
  fi
fi

NEWS_TITLE="Overview of Changes in Parlatype "
NEWS_TITLE+="$VERSION â€“ $DATE"

if [ "$(head -n 1 NEWS)" != "$NEWS_TITLE" ]; then
  echo
  echo "NEWS title is wrong:"
  echo "   found: $(head -n 1 NEWS)"
  echo "expected: $NEWS_TITLE"
  exit 1
else
  echo "NEWS title ... OK"
fi

# Youngest release in Appdata
APPDATA_LINE=$(grep -m 1 -e '<release ' data/xyz.parlatype.Parlatype.metainfo.xml.in)
APPDATA_VERSION=$(grep -o -e '\"[0-9|\.]*\"' <<< "$APPDATA_LINE")

if [ "$APPDATA_VERSION" != "\"$VERSION\"" ]; then
  echo
  echo "Appdata version is wrong:"
  echo "   found: $APPDATA_VERSION"
  echo "expected: \"$VERSION\""
  exit 1
else
  echo "Appdata version ... OK"
fi

APPDATA_DATE=$(grep -o -e '\"[0-9|-]*\"' <<< "$APPDATA_LINE")
if [ "$APPDATA_DATE" != "\"$DATE\"" ]; then
  echo "Appdata date is wrong:"
  echo "   found: $APPDATA_DATE"
  echo "expected: \"$DATE\""
  exit 1
else
  echo "Appdata date ... OK"
fi